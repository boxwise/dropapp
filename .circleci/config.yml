version: 2.1
orbs:
  gcp-cli: circleci/gcp-cli@1.5.0
jobs:
  build:
    docker:
      - image: circleci/php:7.3-stretch-node-browsers
    working_directory: ~/project
    steps:
      - checkout
      - run: sudo docker-php-ext-install pdo_mysql exif
      # load composer cache
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.lock" }}
      - run: composer install -n --prefer-dist
      # save composer cache
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      # build static assets
      - run: php build.php
      # save output
      - persist_to_workspace:
          root: ~/project
          paths:
            - .
  deploy:
    parameters:
      serviceName:
        type: string
      envVariablePrefix:
        type: string
    docker:
      - image: circleci/php:7.3-stretch-node-browsers
    steps:
      - attach_workspace:
          at: workspace
      - gcp-cli/install
      - run: sudo docker-php-ext-install pdo_mysql exif
      - run: |
          cd workspace
          # record version
          echo "${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1}" | tr '[:upper:]' '[:lower:]' > version.txt
          # generate config file
          echo "<?php
            \$settings['rootdir'] = '';
            \$settings['db_socket'] = '/cloudsql/${BOXWISE_PRIMARYDB_SOCKET}';
            \$settings['db_database'] = '${<< parameters.envVariablePrefix >>DBNAME}';
            \$settings['db_user'] = '${<< parameters.envVariablePrefix >>DBNAME}';
            \$settings['db_pass'] = '${<< parameters.envVariablePrefix >>DBPASS}';
            \$settings['sendgrid_key'] = '${BOXWISE_SENDGRID}';" > library/config.php
          echo "paths:
            migrations: '%%PHINX_CONFIG_DIR%%/db/migrations'
            seeds: '%%PHINX_CONFIG_DIR%%/db/seeds'
          environments:
            default_migration_table: phinxlog
            << parameters.serviceName >>:
                adapter: mysql
                host: 127.0.0.1
                name: ${<< parameters.envVariablePrefix >>DBNAME}
                user: root
                pass: ${BOXWISE_PRIMARYDB_ROOTPASS}
                port: 3306
                charset: utf8
                mysql_attr_init_command: SET SQL_MODE = 'NO_AUTO_VALUE_ON_ZERO'
          version_order: creation" > phinx.yml
          # generate google app engine config for target environment
          sed 's/service: default/service: << parameters.serviceName >>/g' app.yaml > app-<< parameters.serviceName >>.yaml
      - run: |
          # get google credentials
          echo $GOOGLE_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          # download cloud sql proxy to enable db access
          curl -o cloud_sql_proxy https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64
          chmod +x cloud_sql_proxy
      - run:
          command: ./cloud_sql_proxy -instances=${BOXWISE_PRIMARYDB_SOCKET}=tcp:3306
          background: true
      - run: |
          # wait for cloud sql proxy to initialize
          sleep 1s
          cd workspace
          # apply db changes
          echo "Migrating << parameters.serviceName >> database"
          vendor/bin/phinx migrate -e << parameters.serviceName >>
          # deploy
          gcloud app deploy app-<< parameters.serviceName >>.yaml cron.yaml --version ${CIRCLE_BUILD_NUM}

workflows:
  build-and-deploy:
    jobs:
    - build
    - deploy:
        envVariablePrefix: BOXWISE_STAGING_
        serviceName: staging
        requires:
          - build
        filters:
          branches:
            only: master
    - deploy:
        envVariablePrefix: BOXWISE_DEMO_
        serviceName: demo
        requires:
          - build
        filters:
          branches:
            only: production